---
export interface Props {
    showMenu?: boolean;
    showLogo?: boolean;
    showCommands?: boolean;
    showContact?: boolean;
    showHome?: boolean;
}

const { showMenu = true, showLogo = true, showCommands = true, showContact = true, showHome = true } = Astro.props;
---

<header>
    <input type="checkbox" id="toggle-sections" style="display: none;">
    <nav>
        {showMenu && <label for="toggle-menu" class="aside-toggle">☰ Menu</label>}
        {showLogo && <img class="linux-logo" src="/linux-svgrepo-com.svg" alt="Linux Logo">}
        {showMenu && <label for="toggle-sections" class="sections-toggle">Sections ▾</label>}
        <ul>
            {showHome && <li><a href="/">Home</a></li>}
            {showCommands && <li><a href="/commands">Commands</a></li>}
            {showContact && <li><a href="/contact">Contact</a></li>}
        </ul>
    </nav>
</header>

<style>


    /* Shared button styles */
    .aside-toggle, .sections-toggle {
        display: inline-block;
        cursor: pointer;
        padding: 0.5rem 0.75rem;
        border: 1px solid var(--terminal-border);
        border-radius: 4px;
        background: none;
        color: var(--nav-link-color);
        transition: background-color 0.2s ease;
    }

    .aside-toggle:hover, .sections-toggle:hover { background-color: var(--terminal-header-background); }

    /* Desktop: hide sections toggle, aside toggle visible */
    .sections-toggle { display: none; }
    .aside-toggle { margin-right: 0.75rem; }

    .linux-logo {
        width: 3rem;
        height: 3rem;
        filter: invert(1);
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
    }

    nav {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        padding: 1rem 2rem 1rem 1rem;
        background-color: var(--nav-background-color);
        color: var(--nav-text-color);
        font-family: var(--body-font);
        font-size: 1.2rem;
        position: fixed;
        top: 0;
        left: calc(var(--aside-width) + 5px);
        right: 0;
        height: var(--nav-height);
        width: calc(100% - var(--aside-width) - 45px);
        z-index: 1;
        box-shadow: 0 2px 4px rgba(252, 251, 251, 0.5);
    }

    nav ul {
        display: flex;
        gap: 2rem;
        list-style: none;
        margin: 0;
        padding: 0;
        margin-left: auto;
    }

    nav ul li a {
        color: var(--nav-link-color);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    nav ul li a:hover {
        color: var(--nav-link-hover-color);
    }

        nav ul li a:active {
		color: var(--nav-link-active-color);
	}

    /* Mobile specific placement */
    @media (max-width: 768px) {
        /* Ensure logo fits inside header height */
        .linux-logo {
            width: 2rem;
            height: 2rem;
            top: 50%;
            margin-top: -1rem;
        }

        /* Smaller buttons for mobile */
        .aside-toggle, .sections-toggle { font-size: 0.85rem; padding: 0.25rem 0.5rem; }
        .sections-toggle { margin-left: auto; display: inline-block; z-index: 1002; }

        /* Hide menu list by default on mobile; shown when #toggle-sections is checked */
        nav ul {
            display: none;
            position: absolute;
            top: 79%;
            right: 12px;
            width: 200px;
            background-color: var(--nav-background-color);
            flex-direction: column;
            padding: 0;
            gap: 0;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
            border: 1px solid var(--terminal-border);
            border-radius: 6px;
            z-index: 999;
        }

        /* Close button at the top of the dropdown */
        nav ul::before {
            content: "✕ Close";
            display: block;
            text-align: center;
            padding: 0.2rem;
            color: var(--nav-text-color);
            font-size: 0.75rem;
            border-bottom: 1px solid var(--terminal-border);
            margin: 0;
            cursor: pointer;
            background-color: var(--terminal-header-background);
            border-radius: 4px;
        }

        /* Tighter spacing for dropdown items */
        nav ul li { margin: 0; }
        nav ul li a {
            font-size: 0.8rem;
            padding: 0.5rem 0.5rem;
            line-height: 1;
            display: block;
            width: 100%;
            border-radius: 4px;
        }

        /* Show dropdown when sections toggle is checked (checkbox is inside header) */
        #toggle-sections:checked ~ nav ul {
            display: flex;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const toggleSections = document.getElementById('toggle-sections');
        const header = document.querySelector('header');
        const headerNav = header?.querySelector('nav ul');

        if (!toggleSections || !headerNav) return;

        // Close dropdown when clicking any navigation link
        headerNav.querySelectorAll('li a').forEach(link =>
            link.addEventListener('click', () => (toggleSections.checked = false))
        );

        // Close when clicking the ::before close area (top ~35px)
        headerNav.addEventListener('click', e => {
            const rect = headerNav.getBoundingClientRect();
            if (e.clientY - rect.top < 35) toggleSections.checked = false;
        });

        // Click outside closes
        document.addEventListener('click', e => {
            if (toggleSections.checked && header && !header.contains(e.target as Node)) {
                toggleSections.checked = false;
            }
        });

        // Escape closes
        document.addEventListener('keydown', e => {
            if (e.key === 'Escape') toggleSections.checked = false;
        });
    });
</script>